//@version 0.0.1, Thu Oct 25 2018
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\ma-landing\src\app.js
(function(window, angular, undefined) {

    'use strict';

    /**
     * Initialize entire application.
     *
     * @namespace Applications
     * @class erusurvey
     */
    angular
        .module('malanding', [

            'ngRoute',
            'malanding.config',
            'malanding.controllers.homeCtrl'

        ])
        .config ([
            '$routeProvider',
            'config',
            function ($routeProvider, config) {


                $routeProvider.
                    when ('/', {
                        templateUrl: config.partials.viewHome,
                        caseInsensitiveMatch: true
                    }).
                    otherwise({
                        redirectTo: '/'
                    });

            }]);

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\ma-landing\src\config.stage.js
(function (window, angular, undefined) {

    'use strict';

    /**
     * Create a configuration object shared between all modules.
     *
     * @namespace Constant
     * @class config
     */
    angular
        .module('malanding.config', [])
        .constant('config', {

            namespace: 'malanding',
            analytics: false,
            debug: true,
            appUrlRoot: '/members/secure/account/erusurvey/',
            servicesTimeout: 120000,
            pdfUrl: '/assets/members/secure/apps/malanding/images/U14314-2018-Medicare-Advantage-Onboarding-Guide-r001.pdf',
            downloadPDFName: 'Start-up Guide',
            services: {
                dataCapture: '/members/services/sec/touchpoints'
            },
            partials: {
                viewHome: '/assets/members/secure/apps/erusurvey/components/home/view.home.htm',
                partsDir: '/assets/members/secure/apps/erusurvey/components/home/partials/'
            }
        });

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\ma-landing\src\services\service.touchpoint.js
(function(window, angular, undefined) {

    'use strict';


    /**
     * @ngdoc service
     * @name erusurvey.services.dataCaptureService. : dataCaptureService
     * @description Emits events to the Data Capture REST API, TouchPoint History, with AngularJS.
     * @requires $window A reference to the browser's window object {@link https://docs.angularjs.org/api/ng/service/$window}
     * @requires $http a core AngularJS service that facilitates communication with the remote HTTP servers via the browser's XMLHttpRequest object or via JSONP. {@link https://docs.angularjs.org/api/ng/service/$http}
     * @requires $q service that helps you run functions asynchronously, and use their return values (or exceptions) when they are done processing. {@link https://docs.angularjs.org/api/ng/service/$q}
     * @requires config config
     */
    angular
        .module('erusurvey.services.dataCaptureService', [

        ])
        .service('dataCaptureService', [
            '$window',
            '$http',
            '$q',
            'config',
            function($window, $http, $q, config) {

                var serviceUrl = config.services.dataCapture;


                /**
                 * @ngdoc method
                 * @name track
                 * @methodOf bcbsnc.member.erusurvey.services.dataCaptureService. : dataCaptureService
                 * @description Tracks an event.
                 * @param {String} code code
                 * @param {Object} data data
                 * @returns {Object} promise promise
                 */
                this.track = function(code, data) {

                    var url         = serviceUrl,
                        passData    = data || {};

                    var eventObject = {

                        transactionStatus: (passData.success ? 'SUCCESS' : 'FAILURE' ),
                        touchpointTransactionContextCode: code
                    };

                    delete passData.success;

                    angular.extend(eventObject, passData);


                    return $http({
                            url: url,
                            method: 'POST',
                            data: eventObject,
                            withCredentials: (($window.document.location.hostname||'').indexOf('localhost') < 0),
                            cache:false
                        })
                        .then(function(response) {

                            return response.data;

                        }, function(error) {

                            return $q.reject({});
                        });
                };

            }]);

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\ma-landing\src\components\home\controller.home.js
(function(window, angular, undefined) {
  "use strict";

  /**
   * Home/Account Summary view controller.
   *
   * @namespace Controllers
   * @class homeCtrl
   */
  angular
    .module("malanding.controllers.homeCtrl", [
      
    ])
    .controller("homeCtrl", [
      "$http",
      '$q',
      "config",
      function(
        $http,
        $q,
        config
      ) {
        var self = this;
        var contentType = 'application/pdf';
        var fileName = config.downloadPDFName;
        var url = config.pdfUrl;
        
        this.downloadStartUpGuide = function() {
          console.log('downloading...');
          $http({
            url: url,
            method: 'GET',
            responseType: 'blob'
          })
          .then(function(response) {
            console.log('response- ', response);
            var blobFile = new Blob([response['data']], { type: contentType });
            console.log('blobFile- ', blobFile);      
            if (window.navigator && window.navigator.msSaveOrOpenBlob) {
              console.log('navigator..');
              navigator.msSaveBlob(blobFile, fileName);
            } else {
              console.log('no navigator..');
              var blobFileUrl = URL.createObjectURL(blobFile);
              console.log('blobFileUrl- ', blobFileUrl);
              var downloadLink = document.createElement("a");
              downloadLink.setAttribute("href", blobFileUrl);
              downloadLink.setAttribute("download", fileName);
              downloadLink.style.visibility = "hidden";
              document.body.appendChild(downloadLink);
              downloadLink.click();
              document.body.removeChild(downloadLink);
            }

            return response.data;

          }, function(error) {

              return $q.reject({});
          });
      }
    }
    ]);
})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\ma-landing\src\services\home\factory.home.js
(function(window, angular, undefined) {

    'use strict';

    /**
     * Demo factory. Brings all services under one factory for the front-end to utilize.
     *
     * @namespace Services
     * @class homeFactory
     */

    angular
        .module('erusurvey.services.homeFactory', [
            //'erusurvey.services.dataCaptureService'
        ])
        .factory('homeFactory', [
            '$http',
            '$q',
            '$filter',
            //'dataCaptureService',
            'config',
            function($http, $q, $filter, config) {

                var response;

                var rejectPromise = $q.reject();

                return {

                    /**
                     * @ngdoc method
                     * @name set
                     * @methodOf bcbsnc.member.billingPayment.services.trackFactory. : trackFactory
                     * @description Set analytics and debugging data.
                     * @param {String} name The key to set an error against.
                     * @param {*} data Data to store/set.
                     * @param {Boolean} adobe adobe
                     * @param {Boolean} touchpoint touchpoint
                     */
                    set: function(name, data) {

                        dataCaptureService.track(name, data);
                    }
                };
            }]);


})(this, window.angular);