//@version 0.0.1, Mon Oct 29 2018
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\erusurvey\src\app.js
(function(window, angular, undefined) {

    'use strict';

    /**
     * Initialize entire application.
     *
     * @namespace Applications
     * @class malanding
     */
    angular
        .module('malanding', [

            'ngRoute',
            'malanding.config',
            'malanding.services.startUpGuideService',
            'malanding.services.homeFactory',
            'malanding.controllers.homeCtrl'

        ])
        .config ([
            '$routeProvider',
            'config',
            function ($routeProvider, config) {


                $routeProvider.
                    when ('/', {
                        templateUrl: config.partials.viewHome,
                        caseInsensitiveMatch: true
                    }).
                    otherwise({
                        redirectTo: '/'
                    });

            }]);

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\erusurvey\src\config.stage.js
(function (window, angular, undefined) {

    'use strict';

    /**
     * Create a configuration object shared between all modules.
     *
     * @namespace Constant
     * @class config
     */
    angular
        .module('malanding.config', [])
        .constant('config', {

            namespace: 'malanding',
            analytics: false,
            debug: true,
            appUrlRoot: '/members/secure/account/malanding/',
            servicesTimeout: 120000,
            downloadPDFName: 'Start-up Guide',
            services: {
                startUpGuide: '/assets/members/secure/apps/malanding/pdf/U14314-2018-Medicare-Advantage-Onboarding-Guide-r001.pdf'
            },
            partials: {
                viewHome: '/assets/members/secure/apps/malanding/components/home/view.home.htm'
            }
        });

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\erusurvey\src\services\service.startupguide.js
(function(window, angular, undefined) {

    'use strict';


    angular
        .module('malanding.services.startUpGuideService', [

        ])
        .service('startUpGuideService', [
            '$window',
            '$http',
            '$q',
            'config',
            function($window, $http, $q, config) {

                var serviceUrl = config.services.startUpGuide,
                    downloadedFileName   = config.downloadPDFName;


                /**
                 * @ngdoc method
                 * @name download
                 * @methodOf malanding.services.startUpGuideService. : startUpGuideService
                 * @description Tracks an event.
                 * @returns {Object} promise promise
                 */
                this.download = function() {

                    var url         = serviceUrl,
                        contentType = 'application/pdf',
                        fileName    = downloadedFileName;

                    
                    return $http({
                        url: url,
                        method: 'GET',
                        responseType: 'blob'
                      })
                      .then(function(response) {
                        console.log('response- ', response);
                        var blobFile = new Blob([response['data']], { type: contentType });
                        console.log('blobFile- ', blobFile);      
                        if (window.navigator && window.navigator.msSaveOrOpenBlob) {
                          console.log('navigator..');
                          navigator.msSaveBlob(blobFile, fileName);
                        } else {
                          console.log('no navigator..');
                          var blobFileUrl = URL.createObjectURL(blobFile);
                          console.log('blobFileUrl- ', blobFileUrl);
                          var downloadLink = document.createElement("a");
                          downloadLink.setAttribute("href", blobFileUrl);
                          downloadLink.setAttribute("download", fileName);
                          downloadLink.style.visibility = "hidden";
                          document.body.appendChild(downloadLink);
                          downloadLink.click();
                          document.body.removeChild(downloadLink);
                        }
            
                        return response.data;
            
                      }, function(error) {
            
                          return $q.reject({});
                      });
                };

            }]);

})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\erusurvey\src\components\home\controller.home.js
(function(window, angular, undefined) {
  "use strict";

  /**
   * Home/Account malanding view controller.
   *
   * @namespace Controllers
   * @class homeCtrl
   */
  angular
    .module("malanding.controllers.homeCtrl", [
      'malanding.services.homeFactory'
    ])
    .controller("homeCtrl", [
      'homeFactory',
      function(
        homeFactory
      ) {
        var self = this;
                
        this.downloadStartUpGuide = function() {
          console.log('downloading pdf');
          homeFactory.downloadStartUpGuide();
        }
    }
    ]);
})(this, window.angular);
//@file D:\Project_Workspace\Extras\Vue\BCBS-Projects\extra\wcms\ERUtilization-Survey\erusurvey\src\services\home\factory.home.js
(function(window, angular, undefined) {

    'use strict';

    /**
     * Demo factory. Brings all services under one factory for the front-end to utilize.
     *
     * @namespace Services
     * @class homeFactory
     */

    angular
        .module('malanding.services.homeFactory', [
            'malanding.services.startUpGuideService'
        ])
        .factory('homeFactory', [
            '$http',
            '$q',
            'startUpGuideService',
            function($http, $q, startUpGuideService) {

                var response;

                var rejectPromise = $q.reject();

                return {

                    downloadStartUpGuide: function() {

                        startUpGuideService.download();
                    }
                };
            }]);


})(this, window.angular);